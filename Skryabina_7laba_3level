using System;
using System.Linq;

public class Program
{
    private static readonly int N = 10000;
    private static readonly double p_answer_russia = 0.8;
    private static readonly double p_answer_japan = 0.7;

    private static void Main(string[] args)
    {
        Quest questRussia = new Quest(N);
        Quest questJapan = new Quest(N);
        string[] q1 = { "Кошка", "Журавль", "Дракон", "Аист", "Ёж", "Волк", "Заяц", "Феникс" };
        string[] q2 = { "Уважение к старшим", "Гостеприимство", "Трудолюбие", "Лояльность" };
        string[] q3 = { "Сакура", "Аниме", "Суши", "Самурай", "Рамен" };

        Random rand = new Random();
        for (int i = 0; i < N; i++)
        {
            string[] answersRussia = { q1[rand.Next(q1.Length)], q2[rand.Next(q2.Length)], q3[rand.Next(q3.Length)] };
            for (int j = 0; j < 3; j++)
            {
                double p = rand.NextDouble();
                if (p > p_answer_russia)
                {
                    answersRussia[j] = "";
                }
            }
            questRussia.Append(answersRussia);
            string[] answersJapan = { q1[rand.Next(q1.Length)], q2[rand.Next(q2.Length)], q3[rand.Next(q3.Length)] };
            for (int j = 0; j < 3; j++)
            {
                double p = rand.NextDouble();
                if (p > p_answer_japan)
                {
                    answersJapan[j] = "";
                }
            }
            questJapan.Append(answersJapan);
        }

        Country russia = new Russia(questRussia);
        Country japan = new Japan(questJapan);

        russia.ShowResults();
        japan.ShowResults();

        Console.WriteLine("Общие результаты для обеих стран:");

        for (int i = 0; i < 3; i++)
        {
            Console.WriteLine("Результаты для Вопроса {0}:", i + 1);

            var topAnswersRussia = questRussia.GetTop(i);
            var topAnswersJapan = questJapan.GetTop(i);

            for (int j = 0; j < topAnswersRussia.Length && j < topAnswersJapan.Length; j++)
            {
                var dataRussia = topAnswersRussia[j];
                var dataJapan = topAnswersJapan[j];

                if (dataRussia != null && dataJapan != null && dataRussia.Answer == dataJapan.Answer)
                {
                    double avgPercentage = (dataRussia.Percentage + dataJapan.Percentage) / 2;
                    Console.WriteLine("{0:f1}% : {1} - средний процент ответа", avgPercentage, dataRussia.Answer);
                }
            }
        }
    }

    private class Quest
    {
        private readonly string[][] _questions;
        private int _currIndex;

        public Quest(int maxQuestions = 100)
        {
            _questions = new string[3][];
            for (int i = 0; i < 3; i++)
            {
                _questions[i] = new string[maxQuestions];
            }
            _currIndex = 0;
        }

        public void Append(string[] answers)
        {
            if (answers.Length != 3)
            {
                Console.WriteLine("Должно быть 3 ответа");
                return;
            }
            for (int i = 0; i < answers.Length; i++)
            {
                _questions[i][_currIndex] = answers[i];
            }
            _currIndex++;
        }

        public AnswerData[] GetTop(int iQuestion)
        {
            AnswerData[] data = new AnswerData[_questions[iQuestion].Length];
            int dataIndex = 0;
            string[] currQuestions = _questions[iQuestion];
            var query = currQuestions.OrderBy(x => x);

            string currQuestion = query.First();
            int currCnt = 0;
            int nullCnt = 0;
            foreach (string item in query)
            {
                if (item == "")
                {
                    nullCnt++;
                }
                if (item == currQuestion)
                {
                    currCnt++;
                }
                else
                {
                    if (currQuestion != "")
                    {
                        data[dataIndex] = new AnswerData(currQuestion, currCnt / (double)(_questions[iQuestion].Length - nullCnt) * 100);
                        dataIndex++;
                    }

                    currCnt = 1;
                    currQuestion = item;
                }
            }

            data[dataIndex] = new AnswerData(currQuestion, currCnt / (double)(_questions[iQuestion].Length - nullCnt) * 100);
            dataIndex++;

            return data;
        }

        public void Show()
        {
            for (int i = 0; i < 3; i++)
            {
                AnswerData[] data = GetTop(i);
                Console.WriteLine("Вопрос #{0}\n---", i + 1);
                int cnt = 0;
                for (int j = 0; j < data.Length; j++)
                {
                    if (data[j] != null)
                    {
                        Console.WriteLine("{0, 4:f1}% : {1}", data[j].Percentage, data[j].Answer);
                        cnt++;
                        if (cnt >= 5)
                        {
                            break;
                        }
                    }
                }
                Console.WriteLine("-----", i + 1);
            }
        }
    }

    private class AnswerData
    {
        public string Answer { get; }
        public double Percentage { get; }

        public AnswerData(string answer, double percentage = 0)
        {
            Answer = answer;
            Percentage = percentage;
        }
    }

    private abstract class Country
    {
        public abstract void ShowResults();
    }

    private class Russia : Country
    {
        private readonly Quest _quest;

        public Russia(Quest quest)
        {
            _quest = quest;
        }

        public override void ShowResults()
        {
            Console.WriteLine("Результаты для России:");
            _quest.Show();
        }
    }

    private class Japan : Country
    {
        private readonly Quest _quest;

        public Japan(Quest quest)
        {
            _quest = quest;
        }

        public override void ShowResults()
        {
            Console.WriteLine("Результаты для Японии:");
            _quest.Show();
        }
    }
}